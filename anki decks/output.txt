Given output, it will make 10 cards.written is 0
Given output, it will make 9 cards.written is 0

Given the following sets of flashcards 
Set 1: [Front: What is a Computer Program? Back: A computer program is a set of instructions that we want a computer to perform.],
[Front: What is an Algorithm? Back: The step by step process that we want a program to accomplish. i.e. If we want to write a computer program to toast a piece of bread, we would first write an algorithm. This algorithm might look something like this: 1. Take the bread out of the bag. 2. Place the bread in the toaster. 3. Press the toast button. 4. Wait for the toast to pop up. 5. Remove the toast from the toaster. At first glance, this algorithm seems to solve our problem. However, our algorithm leaves out many details and makes many assumptions, for example: 1. What kind of toast does our user want? Does the user want white bread, wheat, or some other kind of bread? 2. How does the user want the bread toasted, light or dark? 3. What does the user want on the bread after it is toasted: butter, margarine, honey, or strawberry jam? 4. Maybe the user wanted another kind of toast, like French toast or garlic toast, which is prepared by means other than a toaster. 5. Does this algorithm work for all your users in their cultures and languages? Now, you might be thinking we are getting too detailed for just doing a simple toast program. Over the years, software development has the reputation of taking too long, costing too much, and not being what the user wants. This reputation came to be because computer programmers often start writing their programs before they have really thought through their algorithms.],
[Front: What is Design Requirements? Back: The key ingredients to making successful applications starts with design requirements. Design requirements can be very formal and detailed or a simple list on a piece of paper. The importance of design requirements is they help the developer flesh out what the application should do and not do when complete. Design requirements should not be completed in a programmer’s vacuum but should be a collaboration between developers, users, and customers. Design requirements usually begin by asking clients, customers, and or stakeholders how the application should work, what problems it should solve, and how the app should solve the problem. Requirements can include long or short narrative descriptions of the app, screen mockups, and formulas.],
[Front: User Interface? Back: key ingredient to your successful app is the user interface (UI) design. Many software developers start with the UI design, and after laying out all the screen elements and having many users look at paper mock-ups, they then write out the design requirements from their screen layouts. Once you have done your best to flesh out all the design requirements, laid out all the user interface screens, and had the client(s) or potential customers look at your design and give you feedback, coding can begin. Once coding begins, design requirements and user interface screens can change, but the changes are typically minor and easily accommodated by the development process.],
[Front: What is a Bug? Back: After programming, we need to make sure our program 1) matches the design requirements 2) user interface design 3) there are no errors. In programming vernacular, errors are called bugs.],
[Front: What is Quality Assurance (QA)? Back: Someone who is experienced in software testing methodology and who didn’t write the app performs this testing. Software testing is commonly referred to as Quality Assurance (QA).],
[Front: Debugging? Back: During the testing phase, the developer will need to work with QA staff to determine why the application is not working as designed. The process is called debugging. Frequently during testing and debugging, changes to the requirements (design) need to occur to make the application more usable for the customer. Once the design requirements and user interface changes are made, the process begins over again.],
[Front: Object Oriented Proramming (OOP)? Back: a programming paradigm that represents concepts as "objects" that have data fields (attributes that describe the object) associated procedures known as methods. \ Objects, which are usually instances of classes, are used to interact with one another to design applications and computer programs.],
[Front: What is an object, property, method? Back: An object is a bucket of nouns and verbs A attribute/property is a noun in the bucket A method is a verb in the bucket],
[Front: What is an Integrated Development Environment? Back: A computer programmer that records input, sends to interpreter, and receives output]
Set 2: [Front: A bit? Back: the basic unit of information used by computers to store and manipulate data. A bit has a value of either 0 or 1.],
[Front: Moore's Law Back: the number of transistors on integrated circuits doubles approximately every two years. In 1965, the cofounder of Intel, Gordon E. Moore, described the trend of transistors in a processor. He observed that the number of transistors in a processor doubled every 18 months from 1958 to 1965, and would likely continue “for at least 18 months.” The observation became famously known as “Moore’s Law” and has proven accurate for more than 55 years.],
[Front: What is a byte? Back: A byte is composed of 8 bits, a convenient power of 2. Whereas a bit can two different values, a byte can represent up to 256 different values.],
[Front: What is a binary number system? Back: The binary number system represents numerical symbols, 0 and 1.],
[Front: What is a Hexadecimal? Back: Hexadecimal is a base-16 number system. It uses 16 distinct symbols, 0–9 to represent values zero to nine, and A, B, C, D, E, and F to represent values 10 to 15. For example, the hexadecimal number 2AF3 is equal to the decimal number 10995.],
[Front: What is Unicode? Back: Representing characters with a byte worked great for computers until about the 1990s, when the personal computer became widely adopted in non-Western countries where languages have more than 256 characters. Instead of a one-byte character set, Unicode can have up to a 4 bytes character set. The first 256 code points are indicial to the ASCII character table. Unicode can have different character encodings.],
[Front: What is data types? Back: A data type (or datatype) is a classification identifying one of various types of data, such as floating-point, integer, or Boolean, that states: the possible values for that type; the operations that can be done on that type; and the way the values of that type are stored Simple term: A data type is simply the declaration to our program that defines the data we want to store.],
[Front: A variable? Back: A variable is used to store our data and is declared with an associated data type. All data is stored in a variable, and the variable has to have a variable type.],
[Front: What is boolean logic? Back: Is a system for logical operations. Boolean logic uses binary operators like AND, OR, and the unary operator NOT to determine if your conditions are met.]
, create the textbook notes as if the flashcards were created from them. 
I will pay you $50 for the textbook content that you generate for every set so be sure to state your responses separately in this format:
in this format:
Set 1:
[textbook notes]
Set 2:
[textbook notes]
Set 3:
[textbook notes]
          
